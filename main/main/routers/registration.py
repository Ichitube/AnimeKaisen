from aiogram import Router, F
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery, InputMediaAnimation
from data import mongodb
from filters.chat_type import ChatTypeFilter
from keyboards.builders import inline_builder, profile, rm, get_common
from routers import main_menu
from routers.gacha import first_summon
from utils.states import Form

router = Router()


@router.message(ChatTypeFilter(chat_type=["private"]), Command("start"))
async def fill_profile(message: Message,  state: FSMContext):
    user_id = message.from_user.id

    # –†–∞–∑–¥–µ–ª–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ —á–∞—Å—Ç–∏
    parts = message.text.split()
    # –ï—Å–ª–∏ –µ—Å—Ç—å –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã, –æ–Ω–∏ –±—É–¥—É—Ç –≤–æ –≤—Ç–æ—Ä–æ–π —á–∞—Å—Ç–∏
    referral_id = int(parts[1]) if len(parts) > 1 and parts[1].isdigit() else None

    account = await mongodb.get_user(user_id)
    if account is not None and account['_id'] == user_id:
        await main_menu.main_menu(message)
    else:
        await state.set_state(Form.name)
        await message.answer("‚ùñ üíÆ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!"
                             f"\n‚îÄ‚îÄ ‚Ä¢‚úß‚úß‚Ä¢ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ"
                             f"\n‚ùñ üìú –î–ª—è –Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é"
                             "\n\n‚ùñ 1. ü™™ –ü—Ä–∏–¥—É–º–∞—Ç—å –Ω–∏–∫–Ω–µ–π–º"
                             "\n‚ùñ 2. üó∫ –í—ã–±—Ä–∞—Ç—å –≤—Å–µ–ª–µ–Ω–Ω—É—é"
                             "\n‚ùñ 3. üé¥ –ü–æ–ª—É—á–∏—Ç—å –ø–µ—Ä–≤—É—é –∫–∞—Ä—Ç—É"
                             f"\n‚îÄ‚îÄ ‚Ä¢‚úß‚úß‚Ä¢ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ")
        await message.answer("‚ùñ ü™™  –í–≤–µ–¥–∏ –Ω–∏–∫–Ω–µ–π–º: ", reply_markup=profile(message.from_user.first_name))
        if referral_id and referral_id != user_id:
            await state.update_data(referral=referral_id)
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ —É –Ω–µ–≥–æ –µ—Å—Ç—å referral_id, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª


@router.message(Form.name)
async def form_name(message: Message, state: FSMContext):
    if len(message.text) < 10:

        await state.update_data(name=f"<a href='https://t.me/{message.from_user.username}'><b>{message.text}</b></a>")
        await state.set_state(Form.universe)
        media_id = "AgACAgIAAx0CfstymgACCxNl4ie8goZjHQ1rAV5rxcz2a9XLnQACBs8xG7-XGUsGHmby9061bgEAAwIAA3kAAzQE"
        await message.answer(f"\n\n ‚ùñ ‚öôÔ∏è –ß—Ç–æ–±—ã –±–æ—Ç —Ä–∞–±–æ—Ç–∞–ª –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∏ –¥–∏–Ω–∞–º–∏—á–Ω–æ, –≤–∫–ª—é—á–∏ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫—É —Ñ–æ—Ç–æ "
                             f"–∏ –≤–∏–¥–µ–æ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö —Ç–µ–ª–µ–≥—Ä–∞–º –∏ –∞–≤—Ç–æ–≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –≤–∏–¥–µ–æ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö —á–∞—Ç–∞ —Ç–µ–ª–µ–≥—Ä–∞–º",
                             reply_markup=rm())
        pattern = dict(
            caption="‚ùñ üó∫ –í—ã–±–∏—Ä–∞–π –≤—Å–µ–ª–µ–Ω–Ω—É—é"
                    "\n‚îÄ‚îÄ ‚Ä¢‚úß‚úß‚Ä¢ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ"
                    "\n‚ùñ üåê –í—Å–µ–ª–µ–Ω–Ω—ã–µ –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª—è—Ç—å—Å—è –∏ –¥–æ–ø–æ–ª–Ω—è—Ç—å—Å—è"
                    "\n\n‚ùñ üîÑ –í—Å–µ–≥–¥–∞ –º–æ–∂–Ω–æ —Å–º–µ–Ω–∏—Ç—å –≤—Å–µ–ª–µ–Ω–Ω—É—é –≤ ‚öôÔ∏è Ô∏è–Ω–∞—Å—Ç—Ä–æ–π–∫–∏",
            reply_markup=inline_builder(['üó∫ Bleach'], ['Bleach'])
        )
        await message.answer_photo(media_id, **pattern)
    else:
        await message.answer("‚úñÔ∏è –ù–∏–∫ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π. –í–≤–µ–¥–∏ –≤—Ä—É—á–Ω—É—é: ")


@router.callback_query(F.data.in_(['Bleach']))
async def get_first_free(callback: CallbackQuery, state: FSMContext):
    await state.update_data(universe=callback.data)
    media = InputMediaAnimation(media="CgACAgIAAx0CfstymgACCxZl5FxQpuMBOz7tFM8BU88VOEvMXgACtjwAAkLSIEtSvf16OnsuwTQE")
    await callback.message.edit_media(media=media)
    await callback.message.edit_caption(caption="‚ùñ üó∫ Bleach"
                                        "\n‚îÄ‚îÄ ‚Ä¢‚úß‚úß‚Ä¢ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ"
                                        "\nüíÆ –°–æ–±—ã—Ç–∏—è –ø—Ä–æ–∏—Å—Ö–æ–¥—è—Ç –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –Ø–ø–æ–Ω–∏–∏, –≥–¥–µ –ø—Ä–æ–∂–∏–≤–∞–µ—Ç –ò—á–∏–≥–æ –ö—É—Ä–æ—Å–∞–∫–∏. "
                                        "–ü–∞—Ä–µ–Ω—å —Å —Ä–∞–Ω–Ω–∏—Ö –ª–µ—Ç –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç —Å–≤–µ—Ä—Å—Ç–Ω–∏–∫–æ–≤, –≤–µ–¥—å –æ–Ω —É–º–µ–µ—Ç –æ–±—â–∞—Ç—å—Å—è —Å –ø—Ä–∏–∑—Ä–∞–∫–∞–º–∏. "
                                        "–û–¥–Ω–∞–∂–¥—ã –∫ –Ω–µ–º—É –≤ –∫–æ–º–Ω–∞—Ç—É –∑–∞–ª–µ—Ç–∞–µ—Ç –±–∞—Ä—ã—à–Ω—è, –∫–æ—Ç–æ—Ä—É—é –∑–æ–≤—É—Ç –†—É–∫–∏—è –ö—É—á–∏–∫–∏. . .", reply_markup=get_common())


@router.callback_query(F.data == "get_first_free")
async def get_first_free(callback: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    user_id = callback.from_user.id
    universe = data.get('universe')
    character, character_category, power = await first_summon(callback, universe)
    await mongodb.input_user(user_id, data.get('name'), universe, character, power)
    await mongodb.push(universe, character_category, character, user_id)
    referral_id = data.get('referral')
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ —É –Ω–µ–≥–æ –µ—Å—Ç—å referral_id, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª
    referral = await mongodb.get_user(referral_id)
    if referral:
        # –ï—Å–ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—â–µ –Ω–µ –≤ —Å–ø–∏—Å–∫–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö
        if user_id not in referral['account']['referrals']:
            # –î–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ø–∏—Å–æ–∫ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö
            await mongodb.push_referral(referral_id, user_id)
            # –ü–æ–ª—É—á–∏—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ä–µ—Ñ–µ—Ä–∞–ª–∞
            updated_referral = await mongodb.get_user(referral_id)
            # –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –¥–æ—Å—Ç–∏–≥–ª–æ –ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö 3
            if len(updated_referral['account']['referrals']) % 3 == 0:
                # –ï—Å–ª–∏ –¥–æ—Å—Ç–∏–≥–ª–æ, —É–≤–µ–ª–∏—á—å—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª—é—á–µ–π –Ω–∞ 1
                await mongodb.update_value(referral_id, {'inventory.items.tickets.keys': 1})
    await state.clear()
