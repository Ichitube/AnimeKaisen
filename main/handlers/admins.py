import random
import string

from aiogram import Router, Bot

from aiogram.types import Message
from aiogram.filters import Command
# from keyboards.builders import inline_builder
from data import mongodb
from data.mongodb import db

router = Router()

admins = [6946183730, 6462809130]

from datetime import datetime, timedelta
from aiogram import Bot


@router.message(Command("cheat_defense"))
async def file_id(message: Message):
    if message.from_user.id in admins:
        await mongodb.set_money(message)
    else:
        await message.reply(text="‚ùñ ‚úñÔ∏è –¢—ã –Ω–µ –∞–¥–º–∏–Ω")


@router.message(Command("moneys"))
async def file_id(message: Message):
    if message.from_user.id in admins:
        await mongodb.give_to_all({"account.money": 5000}, message)
    else:
        await message.reply(text="‚ùñ ‚úñÔ∏è –¢—ã –Ω–µ –∞–¥–º–∏–Ω")


@router.message(Command("reset_refs"))
async def reset_refs_cmd(message: Message):
    user_id = message.from_user.id
    account = await mongodb.get_user(user_id)
    if message.from_user.id in admins:  # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω–∞
        text = await mongodb.reset_referrals(account)
        await message.answer(text, parse_mode="HTML", reply_markup=None, disable_web_page_preview=True)
    else:
        await message.reply("‚ùñ ‚úñÔ∏è –¢—ã –Ω–µ –∞–¥–º–∏–Ω")


@router.message(Command("reset_wins"))
async def reset_wins(message: Message):
    users_id = message.from_user.id
    account = await mongodb.get_user(users_id)
    if message.from_user.id in admins:  # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω–∞
        text = await mongodb.reset_wins(account)
        await message.answer(text, parse_mode="HTML", reply_markup=None, disable_web_page_preview=True)
    else:
        await message.reply("‚ùñ ‚úñÔ∏è –¢—ã –Ω–µ –∞–¥–º–∏–Ω")


@router.message(Command("users"))
async def users_count(message: Message):
    if message.from_user.id in admins:
        users_c = await mongodb.users() + 1000
        await message.reply(f"{users_c}")
    else:
        await message.reply("‚ùñ ‚úñÔ∏è –¢—ã –Ω–µ –∞–¥–º–∏–Ω")


@router.message(Command("chats"))
async def chats_count(message: Message):
    if message.from_user.id in admins:
        await message.reply(f"{mongodb.chats()}")
    else:
        await message.reply("‚ùñ ‚úñÔ∏è –¢—ã –Ω–µ –∞–¥–º–∏–Ω")


@router.message(Command("slaves_0000"))
async def chats_count(message: Message):
    if message.from_user.id in admins:
        await mongodb.clear_slaves_for_all_users()
        await message.reply("—É—Å–ø–µ—à–Ω–æ")
    else:
        await message.reply("‚ùñ ‚úñÔ∏è –¢—ã –Ω–µ –∞–¥–º–∏–Ω")


@router.message(Command("slave_0000"))
async def chats_count(message: Message):
    if message.from_user.id in admins:
        await mongodb.clear_slave_for_all_users()
        await message.reply("—É—Å–ø–µ—à–Ω–æ")
    else:
        await message.reply("‚ùñ ‚úñÔ∏è –¢—ã –Ω–µ –∞–¥–º–∏–Ω")


@router.message(Command("user_id"))
async def chats_count(message: Message):
    await message.reply(f"{message.from_user.id}")


def generate_promo_code(length=6):
    characters = string.ascii_uppercase + string.digits
    return ''.join(random.choice(characters) for _ in range(length))


@router.message(Command("promo_generate"))
async def chats_count(message: Message):
    if message.from_user.id in admins:
        promo_code = generate_promo_code()
        await mongodb.add_promo_code(promo_code, "5000¬•üí¥  3üé´ 5üéü")
        await message.reply(f"üì¶ New Promo: {promo_code}")
    else:
        await message.reply("‚ùñ ‚úñÔ∏è –¢—ã –Ω–µ –∞–¥–º–∏–Ω")


@router.message(Command("del_emoji"))
async def chats_count(message: Message):
    if message.from_user.id in admins:
        await mongodb.remove_emojis()
    else:
        await message.reply("‚ùñ ‚úñÔ∏è –¢—ã –Ω–µ –∞–¥–º–∏–Ω")


@router.message(Command("reset_grab"))
async def chats_count(message: Message):
    if message.from_user.id in admins:
        await mongodb.install_zero()
    else:
        await message.reply("‚ùñ ‚úñÔ∏è –¢—ã –Ω–µ –∞–¥–º–∏–Ω")


@router.message(Command("post"))
async def fill_profile(bot: Bot, message: Message):
    if message.from_user.id == 6946183730:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º message_id –∏–∑ –∫–æ–º–∞–Ω–¥—ã
        command_parts = message.text.split()
        if len(command_parts) == 2 and command_parts[1].isdigit():
            message_id = int(command_parts[1])

            async def forward_post_to_all_users(channel_id, msg):
                users = db.users.find()  # –∑–∞–º–µ–Ω–∏—Ç–µ 'users' –Ω–∞ –∏–º—è –≤–∞—à–µ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                async for user in users:
                    try:
                        await bot.forward_message(chat_id=user['_id'], from_chat_id=channel_id, message_id=msg)
                    except Exception as e:
                        print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ—Å–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user['_id']}: {e}")

                chats = db.chats.find()  # –∑–∞–º–µ–Ω–∏—Ç–µ 'chats' –Ω–∞ –∏–º—è –≤–∞—à–µ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏ —á–∞—Ç–æ–≤
                async for chat in chats:
                    try:
                        await bot.forward_message(chat_id=chat['_id'], from_chat_id=channel_id, message_id=msg)
                    except Exception as e:
                        print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ—Å–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç {chat['_id']}: {e}")

            await forward_post_to_all_users(channel_id=-1002042458477, msg=message_id)
        else:
            await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π message_id –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /post")
    else:
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã")


@router.message(Command("message"))
async def send_message_to_all(bot: Bot, message: Message):
    if message.from_user.id in admins:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –∫–æ–º–∞–Ω–¥—ã
        command_parts = message.text.split(maxsplit=1)
        if len(command_parts) == 2:
            text_message = command_parts[1]

            async def send_message_to_all_users(text):
                users = db.users.find()  # –∑–∞–º–µ–Ω–∏—Ç–µ 'users' –Ω–∞ –∏–º—è –≤–∞—à–µ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                async for user in users:
                    try:
                        await bot.send_message(chat_id=user['_id'], text=text)
                    except Exception as e:
                        print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user['_id']}: {e}")

            await send_message_to_all_users(text_message)
        else:
            await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /message")
    else:
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã")


@router.message(Command("chats"))
async def fill_profile(message: Message):
    if message.from_user.id in admins:
        chats = await mongodb.chats()
        await message.answer(f"–í—Å–µ–≥–æ —á–∞—Ç–æ–≤: {chats}")
    else:
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã")


@router.message(Command("migrate_characters"))
async def fill_profile(message: Message):
    if message.from_user.id in admins:
        await mongodb.migrate_characters()
        await message.answer(f"—É—Å–ø–µ—à–Ω–æ")
    else:
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã")


@router.message(Command("res"))
async def fill_profile(message: Message):
    if message.from_user.id in admins:
        args = message.text.split()
        if len(args) != 2 or not args[1].isdigit():
            await message.reply("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /res <user_id>")
            return

        user_id = int(args[1])
        try:
            await mongodb.update_user(user_id, {"battle.battle.status": 0})

            await message.reply(f"–°—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω!")
        except Exception as e:
            await message.reply(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ. Error: {e}")
    else:
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã")
