import random

from aiogram import Router, F

from aiogram.types import CallbackQuery, InputMediaAnimation, Message
from aiogram.enums import ParseMode

from keyboards.builders import inline_builder
from data import mongodb
from filters.chat_type import ChatTypeFilter

router = Router()

menu = ["CgACAgIAAxkBAAIVCWXMvbya7qFOU8F85SXUu24hM5wgAAKfOwACeyZoShH4z6iUPi8kNAQ",
        "CgACAgIAAxkBAAIVCGXMva_F1yC11Mw3o1gv27ZgOmICAAKdOwACeyZoSqKFTee3GFhiNAQ",
        "CgACAgIAAxkBAAIVBmXMvQTWWfC3KX66Wy4evn7cWtHuAAKUOwACeyZoSsragGfIS2gINAQ",
        "CgACAgIAAxkBAAIVAWXMvHhsXaPhuLALMBuumsH-TO4dAAKNOwACeyZoSjQXaqlcQ_ZPNAQ",
        "CgACAgIAAxkBAAIU_mXMvCAB6-_wn8o6hpUwwaR-EF6IAAJ4RQACzLBpSgF57_JwVq60NAQ",
        "CgACAgIAAxkBAAIVAAFlzLxX7B3NqbKxkBbz_SAosLc8eQACjDsAAnsmaEo-TETgyUqmcjQE",
        "CgACAgIAAxkBAAIU_2XMvDvTFeOYOdwd5QRQsPUdhGPlAAKKOwACeyZoSpr5AQNXbnVENAQ",
        "CgACAgIAAxkBAAIU_WXMvB2fCF7pcS9cZDdEMNeeWIe2AAKFOwACeyZoSqkPzi4qGFdvNAQ",
        "CgACAgIAAxkBAAIU-GXMuu17Zb88QyTyVxOEwPFjeCRJAAJoOwACeyZoSp9AqDTjvy4lNAQ",
        "CgACAgIAAxkBAAIU-WXMuv67-KrxO8NKeQgUw4LsrDSSAAJqOwACeyZoSvtrR6TF1C2BNAQ",
        "CgACAgIAAxkBAAIVA2XMyQ7c7bzjIhd4ecf9W6TGWm6eAAKPOwACeyZoSsm5IEXYiJoKNAQ",
        "CgACAgIAAx0CfstymgACBd5lzO0zU05NJEIDdrzbQNLwSMi_XgACbUkAAsywaUqtbVk4cEzxrzQE",
        "CgACAgIAAx0CfstymgACBd1lzO0zAm8ov_iX9BAY7_QVIkf3NQACbEkAAsywaUoWn4BRgx1huTQE",
        "CgACAgIAAx0CfstymgACBdxlzO0yxbOLTRm_B0ttpbA7WYEFdgACa0kAAsywaUoVOJ0ILUcy3jQE"]


@router.message(
    ChatTypeFilter(chat_type=["private"]),
    F.text == "üíÆ –ú–µ–Ω—é"
)
@router.callback_query(F.data == "tokio")
async def tokio(callback: CallbackQuery | Message):
    user_id = callback.from_user.id
    account = await mongodb.get_user(user_id)

    money = account['account']['money']

    pattern = dict(
        caption=f"‚ùñ  üíÆ  <b>–ú–µ–Ω—é</b>"
                f"\n‚îÄ‚îÄ ‚Ä¢‚úß‚úß‚Ä¢ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ"
                f"\n ‚ùñ üåä –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à—É —É–Ω–∏–∫–∞–ª—å–Ω—É—é –≤—Å–µ–ª–µ–Ω–Ω—É—é, –≥–¥–µ –∫–∞–∂–¥—ã–π –∏–≥—Ä–æ–∫ –≤–Ω–æ—Å–∏—Ç —Å–≤–æ–π –≤–∫–ª–∞–¥ –≤ —Å–æ–∑–¥–∞–Ω–∏–µ "
                f"–Ω–µ–ø–æ–≤—Ç–æ—Ä–∏–º–æ–≥–æ –º–∏—Ä–∞"
                f"\n\n ‚ùñ üí´ –ü—Ä–∏–≥–ª–∞—à–∞—è –¥—Ä—É–∑–µ–π –∏–ª–∏ –∫—É–ø–∏–≤ —Å–≤—è—â–µ–Ω–Ω—ã—Ö –±–∏–ª–µ—Ç–æ–≤ –≤—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç–µ –ø—Ä–æ–µ–∫—Ç "
                f"–¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è"
                f"\n\n ‚ùñ üèµ –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –ø–æ–¥–¥–µ—Ä–∂–∫—É!"
                f"\n‚îÄ‚îÄ ‚Ä¢‚úß‚úß‚Ä¢ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ"
                f"\n‚ùÉ üí¥ {money} ¬•",
        parse_mode=ParseMode.HTML,
        reply_markup=inline_builder(
            ["üîÆ –ü—Ä–∏–∑—ã–≤", "ü™™ –ü—Ä–æ—Ñ–∏–ª—å", "üè™ –†—ã–Ω–æ–∫", "üÉè –ë–∏—Ç–≤–∞", "üèØ –ö–ª–∞–Ω", "üè† –î–æ–º", "üìú –ó–∞–¥–∞–Ω–∏–∏"],
            ["banner", "main_page", "store", "card_battle", "clan", "home", "quests"],
            row_width=[1, 2, 2]
            )
    )

    media_id = random.choice(menu)

    if isinstance(callback, CallbackQuery):
        inline_id = callback.inline_message_id
        media = InputMediaAnimation(media=media_id)

        await callback.message.edit_media(media, inline_id)
        await callback.message.edit_caption(inline_id, **pattern)
    else:
        await callback.answer_animation(media_id, **pattern)


homes_photo = {'üè† home_1': 'CgACAgIAAxkBAAIU-2XMuzNmOsXp4JxBcGGDbpD_XENiAAJwOwACeyZoSsgIg-cm-c8iNAQ',
               'üè† home_2': 'CgACAgIAAxkBAAIU_GXMuza-voX5wQABXHuYInkx0vGpQwACcTsAAnsmaEr83Z9UehDa5jQE',
               'üè† home_3': 'CgACAgIAAxkBAAIU-mXMuxgz2RBDeRa8TE0AAaSXD_mKSAACbDsAAnsmaEqm72YZnRGekjQE',
               'üè† home_4': 'CgACAgIAAx0CfstymgACBSZlxMJQZb7FFLh9iPFdSpXOklwDqQACaD4AAgrXEEpTmie8hGfs1zQE',
               'üè† home_5': 'CgACAgIAAx0CfstymgACBdtlzO0rWNF9QoR6R4_5ZaHZDVb37wACakkAAsywaUpFT0CPnQYM5TQE'
               }


@router.callback_query(F.data == "clan")
async def clan(callback: CallbackQuery):
    await callback.answer(f"‚ùñ  üèØ –ö–ª–∞–Ω—ã –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ", show_alert=True)


@router.callback_query(F.data == "card_battle")
async def card_battle(callback: CallbackQuery):
    await callback.answer(f"‚ùñ  üÉè –ö–∞—Ä—Ç–æ—á–Ω–∞—è –±–∏—Ç–≤–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ", show_alert=True)


@router.callback_query(F.data == "quests")
async def requisites(callback: CallbackQuery):
    await callback.answer(f"‚ùñ  üìú –ó–∞–¥–∞–Ω–∏–∏ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ", show_alert=True)
